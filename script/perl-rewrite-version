#!perl

use strict;
use warnings;
use App::RewriteVersion;
use Getopt::Long qw(:config no_auto_abbrev no_ignore_case bundling auto_help);

our $VERSION = '0.001';

GetOptions(
	'd|dry-run'         => \my $dry_run,
	'f|from=s'          => \my $version_from,
	'g|global'          => \my $global,
	'L|follow-symlinks' => \my $follow,
	't|trial'           => \my $trial,
	'u|underscores'     => \my $underscores,
	'v|verbose'         => \my $verbose,
	'V|set-version=s'   => \my $set_version,
);

my $dir = shift;

my $app = App::RewriteVersion->new;
$app->allow_decimal_underscores($underscores) if defined $underscores;
$app->dry_run($dry_run) if defined $dry_run;
$app->follow_symlinks($follow) if defined $follow;
$app->global($global) if defined $global;
$app->verbose($verbose) if defined $verbose;

if (defined $set_version) {
	$app->rewrite_versions(dir => $dir, version => $set_version, is_trial => $trial);
} else {
	$app->update_versions(dir => $dir, bump => 0, is_trial => $trial, version_from => $version_from);
}

=head1 NAME

perl-rewrite-version - A tool to rewrite your Perl module versions

=head1 SYNOPSIS

 perl-rewrite-version [options] [dir]
 
   perl-rewrite-version --from lib/Foo/Bar.pm
   perl-rewrite-version --trial --underscores -V 3.30_3
   perl-rewrite-version -Lg /opt/projects/Foo-Bar/
   V=v1.0.0 perl-rewrite-version
 
 Options:
   -f, --from <file>            file to read version from
   -g, --global                 rewrite versions globally instead of just the first per file (default: disabled)
   -L, --follow-symlinks        follow symlinks when finding perl files to rewrite (default: disabled)
   -t, --trial                  mark version as a trial version (default: disabled)
   -u, --underscores            allow decimal versions with underscores (default: disabled)
   -v, --verbose                print progress messages to STDOUT (default: disabled)
   -V, --set-version            set version manually instead of from file

=head1 DESCRIPTION

L<perl-rewrite-version> is a command-line tool using L<App::RewriteVersion> to
update Perl module versions in a distribution. A distribution directory can be
passed as an argument, otherwise the current working directory is used. The
main module's version is read, and then used to update the version in all perl
files in the distribution with a version assignment. The C<V> environment
variable can be used to override the current version, and the C<-V> option
overrides the version to set regardless of the current version. Existing
version assignments and new versions must be parseable with the same rules as
in L<Dist::Zilla::Plugin::RewriteVersion/"DESCRIPTION">.

See the script L<perl-bump-version> for automatic incrementing of the version
across your distribution.

=head1 OPTIONS

=head2 -d, --dry-run

Run as normal but don't actually update any files. Useful with C<--verbose> to
verify expected functionality.

=head2 -f, --from <file>

File to read main version from. If unspecified, the main module of the
distribution will be guessed in order to determine its version. Ignored if the
C<V> environment variable or the C<-V> option is set.

=head2 -g, --global

Update all instances of version assignment, instead of just the first
occurrence in each file.

=head2 -L, --follow-symlinks

Follow directory symlinks when traversing the distribution for perl files to
rewrite.

=head2 -t, --trial

Mark version assignment as a trial release.

=head2 -u, --underscores

Allow decimal versions with underscores. Note that version tumples with
underscores are never allowed.

=head2 -v, --verbose

Print progress output to STDOUT.

=head2 -V, --set-version

Override the version to use for rewriting, ignoring any existing versions and
the C<V> environment variable.

=head1 BUGS

Report any issues on the public bugtracker.

=head1 AUTHOR

Dan Book <dbook@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is Copyright (c) 2015 by Dan Book.

This is free software, licensed under:

  The Artistic License 2.0 (GPL Compatible)

=head1 SEE ALSO

L<perl-bump-version>, L<App::RewriteVersion>,
L<Dist::Zilla::Plugin::RewriteVersion>, L<Version::Next>
